
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerenciadordelicencas;

import Usuário.*;
import gerenciadordelicencas.*;
import java.awt.Toolkit;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class GraficoContratado extends javax.swing.JFrame {

    private static int cont;
    public static Connection con;
    public static PreparedStatement statement;
    public static ResultSet rs, rs2, rs3, rs4;

    public static conexao bd = new conexao();

    private CategoryDataset createDataset() {
        AdobeBD();
        MicrosoftBD();
        StepBD();
        AutoBD();

        int adobe = Integer.parseInt(adobeField.getText().toString());
        int microsoft = Integer.parseInt(microsoftField.getText().toString());
        int step = Integer.parseInt(stepField.getText().toString());
        int auto = Integer.parseInt(autoField.getText().toString());

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        dataset.addValue(adobe, "Adobe", "Licenças");

        dataset.addValue(microsoft, "Microsoft", "Licenças");

        dataset.addValue(step, "Step", "Licenças");

        dataset.addValue(auto, "Autodesk", "Licenças");
        return dataset;

    }

    public GraficoContratado() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(GraficoContratado.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        adobeLabel = new javax.swing.JLabel();
        stepLabel = new javax.swing.JLabel();
        microsoftLabel = new javax.swing.JLabel();
        adobeField = new javax.swing.JTextField();
        stepField = new javax.swing.JTextField();
        microsoftField = new javax.swing.JTextField();
        autoField = new javax.swing.JTextField();
        autoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 299, Short.MAX_VALUE)
        );

        adobeLabel.setText("Adobe:");

        stepLabel.setText("Step:");

        microsoftLabel.setText("Microsoft:");

        adobeField.setEditable(false);
        adobeField.setBackground(new java.awt.Color(204, 204, 204));

        stepField.setEditable(false);
        stepField.setBackground(new java.awt.Color(204, 204, 204));

        microsoftField.setEditable(false);
        microsoftField.setBackground(new java.awt.Color(204, 204, 204));

        autoField.setEditable(false);
        autoField.setBackground(new java.awt.Color(204, 204, 204));

        autoLabel.setText("Autodesk:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(adobeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adobeField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(microsoftLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(microsoftField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stepLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(stepField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(autoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(autoField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(adobeLabel)
                        .addComponent(adobeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stepField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(microsoftField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stepLabel)
                            .addComponent(microsoftLabel)
                            .addComponent(autoLabel))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void run() {
        GraficoContratado p = new GraficoContratado();
        p.criaGrafico();
        p.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        p.pack();
        p.setResizable(false); //desabilita maximizar
        p.setTitle("Licenças Contratadas");//titulo
        p.setLocationRelativeTo(null);  //centraliza Jframe
        p.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("iconframe.png"))); //icone
        p.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adobeField;
    private javax.swing.JLabel adobeLabel;
    private javax.swing.JTextField autoField;
    private javax.swing.JLabel autoLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField microsoftField;
    private javax.swing.JLabel microsoftLabel;
    private javax.swing.JTextField stepField;
    private javax.swing.JLabel stepLabel;
    // End of variables declaration//GEN-END:variables

    void criaGrafico() {

        CategoryDataset cds = createDataset();

        String titulo = "Licenças Contratadas";

        String eixoy = "Valores";

        String txt_legenda = "Legenda:";

        boolean legenda = true;

        boolean tooltips = true;

        boolean urls = true;

        JFreeChart graf = ChartFactory.createBarChart3D(titulo, txt_legenda, eixoy, cds, PlotOrientation.VERTICAL, legenda, tooltips, urls);

        ChartPanel myChartPanel = new ChartPanel(graf, true);

        myChartPanel.setSize(jPanel1.getWidth(), jPanel1.getHeight());

        myChartPanel.setVisible(true);

        jPanel1.removeAll();

        jPanel1.add(myChartPanel);

        jPanel1.revalidate();

        jPanel1.repaint();

    }

    public void AdobeBD() {

        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/bd?user=root&password=1234");
        } catch (SQLException ex) {
            Logger.getLogger(GraficoContratado.class.getName()).log(Level.SEVERE, null, ex);
        }
        try (Connection con = conexao.getConexao()) {
            String sql = "SELECT SUM(Contratado) FROM licenças WHERE Fornecedor='Adobe'";
            PreparedStatement pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            System.out.println("ok");
            while (rs.next()) {

                adobeField.setText(rs.getString("SUM(Contratado)"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(GraficoContratado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void MicrosoftBD() {
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/bd?user=root&password=1234");
        } catch (SQLException ex) {
            Logger.getLogger(GraficoContratado.class.getName()).log(Level.SEVERE, null, ex);
        }
        try (Connection con = conexao.getConexao()) {
            String sql2 = "SELECT SUM(Contratado) FROM licenças WHERE Fornecedor='Microsoft'";
            PreparedStatement pst2 = con.prepareStatement(sql2);
            rs2 = pst2.executeQuery();
            System.out.println("ok");
            while (rs2.next()) {

                microsoftField.setText(rs2.getString("SUM(Contratado)"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(GraficoContratado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void StepBD() {
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/bd?user=root&password=1234");
        } catch (SQLException ex) {
            Logger.getLogger(GraficoContratado.class.getName()).log(Level.SEVERE, null, ex);
        }
        try (Connection con = conexao.getConexao()) {
            String sql3 = "SELECT SUM(Contratado) FROM licenças WHERE Produto='Step' ";
            PreparedStatement pst3 = con.prepareStatement(sql3);
            rs3 = pst3.executeQuery();
            System.out.println("ok");
            while (rs3.next()) {

                stepField.setText(rs3.getString("SUM(Contratado)"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(GraficoContratado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void AutoBD() {
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/bd?user=root&password=1234");
        } catch (SQLException ex) {
            Logger.getLogger(GraficoContratado.class.getName()).log(Level.SEVERE, null, ex);
        }
        try (Connection con = conexao.getConexao()) {
            String sql4 = "SELECT SUM(Contratado) FROM licenças WHERE Produto='Autodesk' ";
            PreparedStatement pst4 = con.prepareStatement(sql4);
            rs4 = pst4.executeQuery();
            System.out.println("ok");
            while (rs4.next()) {

                autoField.setText(rs4.getString("SUM(Contratado)"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(GraficoContratado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
