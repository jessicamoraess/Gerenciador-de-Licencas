/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerenciadordelicencas;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import gerenciadordelicencas.FrontEnd;
import gerenciadordelicencas.Relatorio;
import java.awt.EventQueue;
import java.awt.Toolkit;
import java.beans.Beans;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.RollbackException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Jéssica Moraes
 */
public class Licenças extends JPanel {

    ResultSet rs;
    private static int cont;

    public Licenças() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Licenças.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("bd?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM Licenças_1 l");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        Licenças = new javax.swing.JDesktopPane();
        PanelCor = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        idLabel = new javax.swing.JLabel();
        contratoLabel = new javax.swing.JLabel();
        fornecedorLabel = new javax.swing.JLabel();
        produtoLabel = new javax.swing.JLabel();
        sistemaLabel = new javax.swing.JLabel();
        linguagemLabel = new javax.swing.JLabel();
        aquisiçãoLabel = new javax.swing.JLabel();
        vencimentoLabel = new javax.swing.JLabel();
        chaveLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        contratoField = new javax.swing.JTextField();
        fornecedorField = new javax.swing.JTextField();
        produtoField = new javax.swing.JTextField();
        sistemaField = new javax.swing.JTextField();
        linguagemField = new javax.swing.JTextField();
        aquisiçãoField = new javax.swing.JTextField();
        vencimentoField = new javax.swing.JTextField();
        chaveField = new javax.swing.JTextField();
        lblPesquisar = new javax.swing.JLabel();
        cmbPesquisar = new javax.swing.JComboBox();
        txtPesquisar = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        btnGerarRelatorio = new javax.swing.JButton();
        Relatorios = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        btnFechar1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        RelatorioIndividual = new javax.swing.JButton();
        RelatorioCompleto = new javax.swing.JButton();
        Imagem = new javax.swing.JLabel();

        FormListener formListener = new FormListener();

        PanelCor.setBackground(new java.awt.Color(255, 255, 255));

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${contrato}"));
        columnBinding.setColumnName("Contrato");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fornecedor}"));
        columnBinding.setColumnName("Fornecedor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${produto}"));
        columnBinding.setColumnName("Produto");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sistema}"));
        columnBinding.setColumnName("Sistema");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${linguagem}"));
        columnBinding.setColumnName("Linguagem");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${aquisição}"));
        columnBinding.setColumnName("Aquisição");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${vencimento}"));
        columnBinding.setColumnName("Vencimento");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${chave}"));
        columnBinding.setColumnName("Chave");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addMouseListener(formListener);
        masterScrollPane.setViewportView(masterTable);

        idLabel.setText("Id:");

        contratoLabel.setText("Contrato:");

        fornecedorLabel.setText("Fornecedor:");

        produtoLabel.setText("Produto:");

        sistemaLabel.setText("Sistema:");

        linguagemLabel.setText("Linguagem:");

        aquisiçãoLabel.setText("Aquisição:");

        vencimentoLabel.setText("Vencimento:");

        chaveLabel.setText("Chave:");

        idField.setEditable(false);
        idField.setBackground(new java.awt.Color(204, 204, 204));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), idField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), idField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.contrato}"), contratoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), contratoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fornecedor}"), fornecedorField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), fornecedorField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.produto}"), produtoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), produtoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.sistema}"), sistemaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), sistemaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.linguagem}"), linguagemField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), linguagemField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.aquisição}"), aquisiçãoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), aquisiçãoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.vencimento}"), vencimentoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), vencimentoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.chave}"), chaveField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), chaveField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        lblPesquisar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPesquisar.setText("Pesquisar por:");

        cmbPesquisar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fornecedor", "Produto" }));

        txtPesquisar.addKeyListener(formListener);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Salvar.png"))); // NOI18N
        saveButton.setText("Salvar");
        saveButton.addActionListener(formListener);

        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Novo.png"))); // NOI18N
        newButton.setText("Novo");
        newButton.addActionListener(formListener);

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Apagar.png"))); // NOI18N
        deleteButton.setText("Apagar");
        deleteButton.addActionListener(formListener);

        btnGerarRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pdf-16.png"))); // NOI18N
        btnGerarRelatorio.setText("Gerar relatórios");
        btnGerarRelatorio.addActionListener(formListener);

        javax.swing.GroupLayout PanelCorLayout = new javax.swing.GroupLayout(PanelCor);
        PanelCor.setLayout(PanelCorLayout);
        PanelCorLayout.setHorizontalGroup(
            PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGerarRelatorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(205, 205, 205)
                .addComponent(newButton, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelCorLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                        .addGroup(PanelCorLayout.createSequentialGroup()
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(idLabel)
                                .addComponent(contratoLabel)
                                .addComponent(fornecedorLabel)
                                .addComponent(produtoLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(produtoField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(fornecedorField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(contratoField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(idField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(PanelCorLayout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chaveLabel)
                                        .addComponent(aquisiçãoLabel))
                                    .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelCorLayout.createSequentialGroup()
                                            .addGap(108, 108, 108)
                                            .addComponent(vencimentoLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(vencimentoField, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                                        .addGroup(PanelCorLayout.createSequentialGroup()
                                            .addGap(23, 23, 23)
                                            .addComponent(chaveField, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelCorLayout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(linguagemLabel)
                                        .addComponent(sistemaLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(sistemaField)
                                        .addComponent(linguagemField, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                        .addGroup(PanelCorLayout.createSequentialGroup()
                                            .addComponent(aquisiçãoField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 162, Short.MAX_VALUE))))))
                        .addGroup(PanelCorLayout.createSequentialGroup()
                            .addComponent(lblPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        PanelCorLayout.setVerticalGroup(
            PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCorLayout.createSequentialGroup()
                .addContainerGap(373, Short.MAX_VALUE)
                .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(saveButton)
                    .addComponent(newButton)
                    .addComponent(btnGerarRelatorio))
                .addContainerGap())
            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelCorLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbPesquisar)
                        .addComponent(txtPesquisar))
                    .addGap(17, 17, 17)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelCorLayout.createSequentialGroup()
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(idLabel)
                                .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(contratoLabel)
                                .addComponent(contratoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fornecedorLabel)
                                .addComponent(fornecedorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(produtoLabel)
                                .addComponent(produtoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(chaveLabel)
                                .addComponent(chaveField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(PanelCorLayout.createSequentialGroup()
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sistemaLabel)
                                .addComponent(sistemaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(linguagemLabel)
                                .addComponent(linguagemField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(PanelCorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(aquisiçãoLabel)
                                .addComponent(aquisiçãoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(vencimentoLabel)
                                .addComponent(vencimentoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(58, 58, 58)))
        );

        Relatorios.setTitle("Consulta de Chave");
        Relatorios.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Usuário/iconframe.png"))); // NOI18N
        Relatorios.setVisible(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnFechar1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnFechar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/x-mark-5-16.png"))); // NOI18N
        btnFechar1.setText("Fechar");
        btnFechar1.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 135, 6, 6);
        jPanel2.add(btnFechar1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jLabel4, gridBagConstraints);

        RelatorioIndividual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/report-3-16.png"))); // NOI18N
        RelatorioIndividual.setText("Relatório Individual");
        RelatorioIndividual.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 66;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(54, 24, 0, 6);
        jPanel2.add(RelatorioIndividual, gridBagConstraints);

        RelatorioCompleto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/report-2-16.png"))); // NOI18N
        RelatorioCompleto.setText("Relatório Completo");
        RelatorioCompleto.addActionListener(formListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 64;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 24, 0, 6);
        jPanel2.add(RelatorioCompleto, gridBagConstraints);

        Imagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/downloads-64.gif"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.ipady = 92;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 24, 6, 0);
        jPanel2.add(Imagem, gridBagConstraints);

        javax.swing.GroupLayout RelatoriosLayout = new javax.swing.GroupLayout(Relatorios.getContentPane());
        Relatorios.getContentPane().setLayout(RelatoriosLayout);
        RelatoriosLayout.setHorizontalGroup(
            RelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RelatoriosLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RelatoriosLayout.setVerticalGroup(
            RelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RelatoriosLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout LicençasLayout = new javax.swing.GroupLayout(Licenças);
        Licenças.setLayout(LicençasLayout);
        LicençasLayout.setHorizontalGroup(
            LicençasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 634, Short.MAX_VALUE)
            .addGroup(LicençasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(PanelCor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(LicençasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LicençasLayout.createSequentialGroup()
                    .addGap(141, 141, 141)
                    .addComponent(Relatorios, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(316, Short.MAX_VALUE)))
        );
        LicençasLayout.setVerticalGroup(
            LicençasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 409, Short.MAX_VALUE)
            .addGroup(LicençasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(PanelCor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(LicençasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LicençasLayout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addComponent(Relatorios, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(120, Short.MAX_VALUE)))
        );
        Licenças.setLayer(PanelCor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Licenças.setLayer(Relatorios, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 633, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Licenças))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 409, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Licenças))
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                Licenças.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                Licenças.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                Licenças.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == btnGerarRelatorio) {
                Licenças.this.btnGerarRelatorioActionPerformed(evt);
            }
            else if (evt.getSource() == btnFechar1) {
                Licenças.this.btnFechar1ActionPerformed(evt);
            }
            else if (evt.getSource() == RelatorioIndividual) {
                Licenças.this.RelatorioIndividualActionPerformed(evt);
            }
            else if (evt.getSource() == RelatorioCompleto) {
                Licenças.this.RelatorioCompletoActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == txtPesquisar) {
                Licenças.this.txtPesquisarKeyReleased(evt);
            }
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == masterTable) {
                Licenças.this.masterTableMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        PesquisarCadastros();        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void btnFechar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechar1ActionPerformed
        Relatorios.setVisible(false);
        Licenças.setVisible(true);
    }//GEN-LAST:event_btnFechar1ActionPerformed

    private void RelatorioIndividualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RelatorioIndividualActionPerformed
        if (masterTable.getSelectedRow() < 0) {

            JOptionPane.showMessageDialog(null, "Selecione um cadastro da tabela!", "Aviso", JOptionPane.INFORMATION_MESSAGE);

        } else {
            GeraPDF(idField.getText(), contratoField.getText(), fornecedorField.getText(), produtoField.getText(), sistemaField.getText(), linguagemField.getText(), aquisiçãoField.getText(), vencimentoField.getText(), chaveField.getText());
    }//GEN-LAST:event_RelatorioIndividualActionPerformed
    }
    private void RelatorioCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RelatorioCompletoActionPerformed
        new gerenciadordelicencas.Relatorio();
        String[] args = null;
        try {
            Relatorio.run(args);
        } catch (Exception ex) {
            Logger.getLogger(FrontEnd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RelatorioCompletoActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String message = " Deseja realmente deletar este cadastro? ";
        String title = "Mensagem de confirmação:";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {

            int[] selected = masterTable.getSelectedRows();
            List<gerenciadordelicencas.Licenças_1> toRemove = new ArrayList<gerenciadordelicencas.Licenças_1>(selected.length);
            for (int idx = 0; idx < selected.length; idx++) {
                gerenciadordelicencas.Licenças_1 l = list.get(masterTable.convertRowIndexToModel(selected[idx]));
                toRemove.add(l);
                entityManager.remove(l);
            }
            list.removeAll(toRemove);
            Salvar();
            Atualizar();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        gerenciadordelicencas.Licenças_1 l = new gerenciadordelicencas.Licenças_1();
        entityManager.persist(l);
        list.add(l);
        Salvar();
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        Salvar();
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        Salvar();
        Atualizar();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void btnGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarRelatorioActionPerformed
        Licenças.setVisible(true);
        Relatorios.setVisible(true);
    }//GEN-LAST:event_btnGerarRelatorioActionPerformed

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        mostraItens();        // TODO add your handling code here:
    }//GEN-LAST:event_masterTableMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Imagem;
    private javax.swing.JDesktopPane Licenças;
    private javax.swing.JPanel PanelCor;
    private javax.swing.JButton RelatorioCompleto;
    private javax.swing.JButton RelatorioIndividual;
    private javax.swing.JInternalFrame Relatorios;
    private javax.swing.JTextField aquisiçãoField;
    private javax.swing.JLabel aquisiçãoLabel;
    private javax.swing.JButton btnFechar1;
    private javax.swing.JButton btnGerarRelatorio;
    private javax.swing.JTextField chaveField;
    private javax.swing.JLabel chaveLabel;
    private javax.swing.JComboBox cmbPesquisar;
    private javax.swing.JTextField contratoField;
    private javax.swing.JLabel contratoLabel;
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextField fornecedorField;
    private javax.swing.JLabel fornecedorLabel;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JTextField linguagemField;
    private javax.swing.JLabel linguagemLabel;
    private java.util.List<gerenciadordelicencas.Licenças_1> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField produtoField;
    private javax.swing.JLabel produtoLabel;
    private javax.persistence.Query query;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField sistemaField;
    private javax.swing.JLabel sistemaLabel;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField vencimentoField;
    private javax.swing.JLabel vencimentoLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public void run() {
        JFrame frame = new JFrame();
        frame.setContentPane(new gerenciadordelicencas.Licenças());
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.pack();
        frame.setResizable(false); //desabilita maximizar
        frame.setTitle("Cadastro de Licenças");//titulo
        frame.setLocationRelativeTo(null);  //centraliza Jframe
        frame.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("iconframe.png"))); //icone
        frame.setVisible(true);
    }

    public void mostraItens() {
        int seleciona = masterTable.getSelectedRow();
        idField.setText(masterTable.getModel().getValueAt(seleciona, 0).toString());
        contratoField.setText(masterTable.getModel().getValueAt(seleciona, 1).toString());
        fornecedorField.setText(masterTable.getModel().getValueAt(seleciona, 2).toString());
        produtoField.setText(masterTable.getModel().getValueAt(seleciona, 3).toString());
        sistemaField.setText(masterTable.getModel().getValueAt(seleciona, 4).toString());
        linguagemField.setText(masterTable.getModel().getValueAt(seleciona, 5).toString());
        aquisiçãoField.setText(masterTable.getModel().getValueAt(seleciona, 6).toString());
        vencimentoField.setText(masterTable.getModel().getValueAt(seleciona, 7).toString());
        chaveField.setText(masterTable.getModel().getValueAt(seleciona, 8).toString());
    }

    public void listarCadastros() {
        String sql = "Select ID, Contrato, Fornecedor, Produto, Sistema, Linguagem, Aquisição, Vencimento, Chave from Licenças order by ID Asc ";
        try (Connection con = BancoDeDados.conexao.getConnection()) {
            PreparedStatement pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            masterTable.setModel(DbUtils.resultSetToTableModel(rs));
            txtPesquisar.setText("");
        } catch (SQLException error) {
            JOptionPane.showMessageDialog(null, error);

        }
    }

    private void PesquisarCadastros() {
        if (cmbPesquisar.getSelectedIndex() == 0) {
            String sql = "Select ID, Contrato, Fornecedor, Produto, Sistema, Linguagem, Aquisição, Vencimento, Chave from Licenças where Fornecedor like ?";

            try (Connection con = BancoDeDados.conexao.getConnection()) {
                PreparedStatement pst = con.prepareStatement(sql);

                pst = con.prepareStatement(sql);
                pst.setString(1, txtPesquisar.getText() + "%");
                rs = pst.executeQuery();
                masterTable.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException error) {

            }
        }
        if (cmbPesquisar.getSelectedIndex() == 1) {
            String sql = "Select ID, Contrato, Fornecedor, Produto, Sistema, Linguagem, Aquisição, Vencimento, Chave from Licenças where Produto like ?";

            try (Connection con = BancoDeDados.conexao.getConnection()) {
                PreparedStatement pst = con.prepareStatement(sql);

                pst = con.prepareStatement(sql);
                pst.setString(1, txtPesquisar.getText() + "%");
                rs = pst.executeQuery();
                masterTable.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException error) {

            }

        }
    }

    private void Atualizar() {
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);

    }

    private void Salvar() {
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
            editarCadastros();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<gerenciadordelicencas.Licenças_1> merged = new ArrayList<gerenciadordelicencas.Licenças_1>(list.size());
            for (gerenciadordelicencas.Licenças_1 l : list) {
                merged.add(entityManager.merge(l));
            }
            list.clear();
            list.addAll(merged);
        }
    }

    private int GeraPDF(String ID, String Contrato, String Fornecedor, String Produto, String Sistema, String Linguagem, String Aquisição,
            String Vencimento, String Chave) {

        try {
            cont++;
            Document doc = new Document(PageSize.A4);
            JFileChooser fileChooser = new JFileChooser();
            int saveValue = fileChooser.showSaveDialog(null);
            if (saveValue == JFileChooser.APPROVE_OPTION) {
                OutputStream os = new FileOutputStream(fileChooser.getSelectedFile().getAbsolutePath() + ".pdf");
                PdfWriter.getInstance(doc, os);

                doc.open();
                // Image logo = Image.getInstance("Netshoes.jpg");
                // logo.setAlignment(Image.ALIGN_LEFT);
                // doc.add(logo);
                Font f = new Font(Font.FontFamily.TIMES_ROMAN, 20, Font.BOLD);
                Paragraph p = new Paragraph("Relatório de Licenças", f);
                p.setAlignment(Paragraph.ALIGN_CENTER);
                doc.add(p);
                Paragraph ParagrafoID = new Paragraph("ID: " + ID);
                doc.add(ParagrafoID);
                Paragraph ParagrafoContrato = new Paragraph("Contrato: " + Contrato);
                doc.add(ParagrafoContrato);
                Paragraph ParagrafoFornecedor = new Paragraph("Fornecedor: " + Fornecedor);
                doc.add(ParagrafoFornecedor);
                Paragraph ParagrafoProduto = new Paragraph("Produto: " + Produto);
                doc.add(ParagrafoProduto);
                Paragraph ParagrafoSistema = new Paragraph("Sistema: " + Sistema);
                doc.add(ParagrafoSistema);
                Paragraph ParagrafoLinguagem = new Paragraph("Linguagem: " + Linguagem);
                doc.add(ParagrafoLinguagem);
                Paragraph ParagrafoAquisição = new Paragraph("Aquisição: " + Aquisição);
                doc.add(ParagrafoAquisição);
                Paragraph ParagrafoVencimento = new Paragraph("Vencimento: " + Vencimento);
                doc.add(ParagrafoVencimento);
                Paragraph ParagrafoChave = new Paragraph("Chave: " + Chave);
                doc.add(ParagrafoChave);
                doc.close();
                JOptionPane.showMessageDialog(null, "Relatório gerado com sucesso!", "Relatório Concluido", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("ok");

                if (saveValue == JFileChooser.CANCEL_OPTION) {
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Licenças.class.getName()).log(Level.SEVERE, null, ex);

        } catch (DocumentException ex) {
            Logger.getLogger(Licenças.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Licenças.class.getName()).log(Level.SEVERE, null, ex);
        }
        return cont;

    }

    private void editarCadastros() {
        String sql = "Update Licenças set Contrato  = ?, Fornecedor  = ?, Produto = ? , Sistema = ? , Linguagem = ? , Aquisição = ? , Vencimento = ? , Chave = ? where ID = ?";

        try (Connection con = BancoDeDados.conexao.getConnection()) {
            PreparedStatement pst = con.prepareStatement(sql);

            pst.setString(1, contratoField.getText());
            pst.setString(2, fornecedorField.getText());
            pst.setString(3, produtoField.getText());
            pst.setString(4, sistemaField.getText());
            pst.setString(5, linguagemField.getText());
            pst.setString(6, aquisiçãoField.getText());
            pst.setString(7, vencimentoField.getText());
            pst.setString(8, chaveField.getText());
            pst.setString(9, idField.getText());
            pst.executeUpdate();
            listarCadastros();
            //JOptionPane.showMessageDialog(null, "Cadastro atualizado com sucesso.");

        } catch (SQLException error) {
            JOptionPane.showMessageDialog(null, error);

        }

    }
}
